// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/LuPig.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService {
  /// <summary>
  ///定义服务
  /// </summary>
  public static partial class LuPig
  {
    static readonly string __ServiceName = "LuPig.LuPig";

    static readonly grpc::Marshaller<global::GrpcService.SuckingPigRequest> __Marshaller_LuPig_SuckingPigRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.SuckingPigRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.SuckingPigResult> __Marshaller_LuPig_SuckingPigResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.SuckingPigResult.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcService.SuckingPigRequest, global::GrpcService.SuckingPigResult> __Method_SuckingPig = new grpc::Method<global::GrpcService.SuckingPigRequest, global::GrpcService.SuckingPigResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SuckingPig",
        __Marshaller_LuPig_SuckingPigRequest,
        __Marshaller_LuPig_SuckingPigResult);

    static readonly grpc::Method<global::GrpcService.SuckingPigRequest, global::GrpcService.SuckingPigResult> __Method_SuckingdPig = new grpc::Method<global::GrpcService.SuckingPigRequest, global::GrpcService.SuckingPigResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SuckingdPig",
        __Marshaller_LuPig_SuckingPigRequest,
        __Marshaller_LuPig_SuckingPigResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.LuPigReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LuPig</summary>
    [grpc::BindServiceMethod(typeof(LuPig), "BindService")]
    public abstract partial class LuPigBase
    {
      /// <summary>
      ///定义吸猫方法
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.SuckingPigResult> SuckingPig(global::GrpcService.SuckingPigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.SuckingPigResult> SuckingdPig(global::GrpcService.SuckingPigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(LuPigBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SuckingPig, serviceImpl.SuckingPig)
          .AddMethod(__Method_SuckingdPig, serviceImpl.SuckingdPig).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LuPigBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SuckingPig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.SuckingPigRequest, global::GrpcService.SuckingPigResult>(serviceImpl.SuckingPig));
      serviceBinder.AddMethod(__Method_SuckingdPig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.SuckingPigRequest, global::GrpcService.SuckingPigResult>(serviceImpl.SuckingdPig));
    }

  }
}
#endregion
